#!/usr/bin/env python3
# Copyright (c) Mysten Labs, Inc.
# SPDX-License-Identifier: Apache-2.0

# This is code that could be used as is or copied into a jupyter notebook
# Plots the distribution of binary modules tables in the csv provided.
# The csv can be generated by running the tool.

import pandas as pd
import matplotlib.pyplot as plt

# Define custom aggregation functions - there must be bette ways to do this...
def percentile_10(x):
    return x.quantile(0.10)

def percentile_25(x):
    return x.quantile(0.25)

def percentile_50(x):
    return x.quantile(0.50)

def percentile_75(x):
    return x.quantile(0.75)

def percentile_90(x):
    return x.quantile(0.90)


def percentile_95(x):
    return x.quantile(0.95)

def percentile_99(x):
    return x.quantile(0.99)

def percentile_999(x):
    return x.quantile(0.999)

# remove below if using in a notebook
def main():
    # read data, assume a `data` folder in the same directory with the csv files
    binary_modules_main = pd.read_csv('data/binary_modules_main.csv')
    modules_main = pd.read_csv('data/modules_main.csv')
    binary_modules_test = pd.read_csv('data/binary_modules_test.csv')
    modules_test = pd.read_csv('data/modules_test.csv')

    print(len(binary_modules_main))
    print(len(modules_main))
    print(len(binary_modules_test))
    print(len(modules_test))

    # make single dataframe containing both mainnet and testnet
    binary_modules_test = binary_modules_test.drop(columns=['package', 'version', 'module'])
    binary_modules_main = binary_modules_main.drop(columns=['package', 'version', 'module'])
    binary_modules = pd.concat([binary_modules_test, binary_modules_main], ignore_index=True)

    # show all columns of the merged dataframe
    print(binary_modules.columns)

    summary = binary_modules.agg([
        'min',
        'max',
        'mean',
        percentile_10,
        percentile_25,
        percentile_50,
        percentile_75,
        percentile_90,
        percentile_95,
        percentile_99,
        percentile_999
    ])
    print(summary.T)

    # shows the distribution of all tables if run in a notebook - uncomment as needed
    # binary_modules.hist(column=[
    #     'module_handles', 'struct_handles', 'function_handles', 'field_handles',
    #     'struct_def_instantiations', 'function_instantiations',
    #     'field_instantiations', 'signatures', 'identifiers',
    #     'address_identifiers', 'constant_pool', 'struct_defs', 'function_defs'], bins=10, figsize=(20, 12))


if __name__ == "__main__":
    main()